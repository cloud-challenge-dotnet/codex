# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
        
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.3.0
        with:
          mongodb-version: 4.2
      
      - name: Setup .NET Core 3
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.0'

      - name: Setup .NET Core 5
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
      - name: Install dependencies
        run: dotnet restore
        
      - name: Build
        run: dotnet build --configuration Release --no-restore
          #dotnet test --no-restore --verbosity normal /p:CollectCoverage=true /p:CoverletOutput="../coverage.json" /p:MergeWith="../coverage.json" /maxcpucount:1  /p:CoverletOutputFormat=lcov
          
      - name: Test
        #run: dotnet test ./codex.sln -l trx -r ${HOME}/results /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=${HOME}/results/coverage /p:MergeWith='${HOME}/results/coverage.json'
        run: dotnet test ./codex.sln -l trx -r ./ /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=../coverage.xml /p:MergeWith='../coverage.xml'
        #run: dotnet test --no-restore --verbosity normal /p:CoverletOutput="TestsResults/" /p:CollectCoverage=true  /p:CoverletOutputFormat=opencover

      - name: codecov
        uses: codecov/codecov-action@v1
        with:
          files: ./Tests/coverage.xml
          fail_ci_if_error: true
          verbose: true
